class Solution {
public:
    bool wordBreak(string s, vector<string>& wordDict) {
        int s_len = s.size(), w_len = wordDict.size();
        if (s_len == 0 || w_len == 0) return false;
        vector<bool> dp(s_len + 1, false);
        dp[0] = true;
        for (int i = 1; i < s_len + 1; i++) {
            for (int j = 0; j < w_len ; j++) {
                if (wordDict[j].length() <= i) {
                    int pos = i - wordDict[j].length();
                    if (dp[pos] == true && wordDict[j].compare(s.substr(pos, wordDict[j].length())) == 0) {
                            dp[i] = true;
                    }
                }
               
            }
        }
        return dp[s_len];
    }
};
