class Solution {
public:
    int minDistance(string word1, string word2) {
        int m=word1.length(),n=word2.length();
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        //dp的含义是分别截至到位置i，j，相互转换的最少次数
        for(int i=0;i<=m;i++){
            for(int j=0;j<=n;j++){
                if(j==0){
                    dp[i][j]=i;
                }
                else if(i==0){
                    dp[i][j]=j;
                }
                else{
                    dp[i][j]=min(dp[i-1][j-1]+((word2[j-1]==word1[i-1])?0:1),min(dp[i-1][j]+1,dp[i][j-1]+1));

                }
            }
        }
        return dp[m][n];

    }
};
